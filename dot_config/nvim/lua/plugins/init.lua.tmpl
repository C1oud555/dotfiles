return {
  {
    "benomahony/uv.nvim",
    ft = "python",
    opts = {
      picker_integration = true,
    },
  },
  {
    "neovim/nvim-lspconfig",
    opts = {
      diagnostics = {
        float = {
          border = "rounded",
        },
      },
      codelens = {
        enabled = true,
      },
    },
  },
  {
    "noice.nvim",
    opts = {
      presets = { lsp_doc_border = true },
    },
  },
  {
    "saghen/blink.cmp",
    opts = {
      completion = {
        menu = {
          border = "rounded",
          winhighlight = "Normal:BlinkCmpDoc,FloatBorder:BlinkCmpDocBorder,CursorLine:BlinkCmpDocCursorLine,Search:None",
        },
        documentation = {
          window = {
            border = "rounded",
          },
        },
      },
    },
  },
  {
    "max397574/better-escape.nvim",
    config = function()
      require("better_escape").setup()
    end,
  },
  {
    "RaafatTurki/hex.nvim",
    config = function()
      require("hex").setup()
    end,
  },
  {
    "m4xshen/hardtime.nvim",
    opts = {},
    enabled = false,
  },
  {
    "folke/snacks.nvim",
    opts = {
      explorer = {
        replace_netrw = false,
      },
      terminal = {
        win = {
          position = "float",
          border = "rounded",
        },
      },
    },
    keys = {
      {
        "<leader>.",
        LazyVim.pick("files", { root = false }),
        desc = "Find Files (cwd)",
      },
    },
  },
  {
    "Mythos-404/xmake.nvim",
    version = "^3",
    lazy = true,
    event = "BufReadPost",
    config = true,
  },
  {
    "stevearc/oil.nvim",
    ---@module 'oil'
    ---@type oil.SetupOpts
    opts = {},
    -- Optional dependencies
    dependencies = { { "nvim-mini/mini.icons", opts = {} } },
    -- dependencies = { "nvim-tree/nvim-web-devicons" }, -- use if you prefer nvim-web-devicons
    -- Lazy loading is not recommended because it is very tricky to make it work correctly in all situations.
    lazy = false,
  },
  {
    "folke/tokyonight.nvim",
    enabled = false,
  },
  {
    "catppuccin/nvim",
    opts = {
      transparent_background = true,
      float = {
        transparent = true,
      },
    },
  },
  {
    "LazyVim/LazyVim",
    opts = {
      colorscheme = "catppuccin",
    },
  },
  {
    "edte/novel.nvim",
    dependencies = {
      "folke/snacks.nvim", -- optional for snacks picker
    },
    -- stylua: ignore start
    keys = {
        { '<Leader>m/', function() require('biquge').search() end, desc = 'Search online' },
        { '<Leader>mf', function() require('biquge').local_search() end, desc = 'Open local file' },
        { '<Leader>md', function() require('biquge').local_browse() end, desc = 'Browse local directory' },
        { '<Leader>mo', function() require('biquge').local_browse() end, desc = 'Open local file (browse)' },
        { '<Leader>mb', function() require('biquge').toggle() end, desc = 'Toggle' },
        { '<Leader>mt', function() require('biquge').toc() end, desc = 'Toc' },
        { '<Leader>mn', function() require('biquge').next_chap() end, desc = 'Next chapter' },
        { '<Leader>mp', function() require('biquge').prev_chap() end, desc = 'Previous chapter' },
        { '<Leader>ms', function() require('biquge').star() end, desc = 'Star current book' },
        { '<Leader>ml', function() require('biquge').bookshelf() end, desc = 'Bookshelf' },
        { '<Leader>mr', function() require('biquge').resume_last_reading() end, desc = 'Resume last reading' },
        { '<Leader>mh', function() require('biquge').reading_history() end, desc = 'Reading history' },
        { '<M-d>', function() require('biquge').scroll(1) end, desc = 'Scroll down' },
        { '<M-u>', function() require('biquge').scroll(-1) end, desc = 'Scroll up' },
    },
    -- stylua: ignore end
    opts = {},
  },
}
